//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="HFCBaseServiceSoap", Namespace="http://craftsilicon.com/BRIMS")]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
public partial class HFCBaseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback QueryDefaultOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUTAccountsWebOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetClientAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUTAccountStatementOperationCompleted;
    
    /// <remarks/>
    public HFCBaseService() {
        this.Url = "http://localhost:8983/HFCBaseService.asmx";
    }
    
    /// <remarks/>
    public event QueryDefaultCompletedEventHandler QueryDefaultCompleted;
    
    /// <remarks/>
    public event GetUTAccountsWebCompletedEventHandler GetUTAccountsWebCompleted;
    
    /// <remarks/>
    public event GetClientAccountCompletedEventHandler GetClientAccountCompleted;
    
    /// <remarks/>
    public event GetUTAccountStatementCompletedEventHandler GetUTAccountStatementCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/QueryDefault", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable QueryDefault(ref string errMsg, string StoredProcedure, object[] ProcedureParameters) {
        object[] results = this.Invoke("QueryDefault", new object[] {
                    errMsg,
                    StoredProcedure,
                    ProcedureParameters});
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginQueryDefault(string errMsg, string StoredProcedure, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("QueryDefault", new object[] {
                    errMsg,
                    StoredProcedure,
                    ProcedureParameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndQueryDefault(System.IAsyncResult asyncResult, out string errMsg) {
        object[] results = this.EndInvoke(asyncResult);
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void QueryDefaultAsync(string errMsg, string StoredProcedure, object[] ProcedureParameters) {
        this.QueryDefaultAsync(errMsg, StoredProcedure, ProcedureParameters, null);
    }
    
    /// <remarks/>
    public void QueryDefaultAsync(string errMsg, string StoredProcedure, object[] ProcedureParameters, object userState) {
        if ((this.QueryDefaultOperationCompleted == null)) {
            this.QueryDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDefaultOperationCompleted);
        }
        this.InvokeAsync("QueryDefault", new object[] {
                    errMsg,
                    StoredProcedure,
                    ProcedureParameters}, this.QueryDefaultOperationCompleted, userState);
    }
    
    private void OnQueryDefaultOperationCompleted(object arg) {
        if ((this.QueryDefaultCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.QueryDefaultCompleted(this, new QueryDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetUTAccountsWeb", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetUTAccountsWeb(ref string errMsg, object[] ProcedureParameters) {
        object[] results = this.Invoke("GetUTAccountsWeb", new object[] {
                    errMsg,
                    ProcedureParameters});
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUTAccountsWeb(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUTAccountsWeb", new object[] {
                    errMsg,
                    ProcedureParameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetUTAccountsWeb(System.IAsyncResult asyncResult, out string errMsg) {
        object[] results = this.EndInvoke(asyncResult);
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetUTAccountsWebAsync(string errMsg, object[] ProcedureParameters) {
        this.GetUTAccountsWebAsync(errMsg, ProcedureParameters, null);
    }
    
    /// <remarks/>
    public void GetUTAccountsWebAsync(string errMsg, object[] ProcedureParameters, object userState) {
        if ((this.GetUTAccountsWebOperationCompleted == null)) {
            this.GetUTAccountsWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUTAccountsWebOperationCompleted);
        }
        this.InvokeAsync("GetUTAccountsWeb", new object[] {
                    errMsg,
                    ProcedureParameters}, this.GetUTAccountsWebOperationCompleted, userState);
    }
    
    private void OnGetUTAccountsWebOperationCompleted(object arg) {
        if ((this.GetUTAccountsWebCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUTAccountsWebCompleted(this, new GetUTAccountsWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetClientAccount", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetClientAccount(ref string errMsg, object[] ProcedureParameters) {
        object[] results = this.Invoke("GetClientAccount", new object[] {
                    errMsg,
                    ProcedureParameters});
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetClientAccount(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetClientAccount", new object[] {
                    errMsg,
                    ProcedureParameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetClientAccount(System.IAsyncResult asyncResult, out string errMsg) {
        object[] results = this.EndInvoke(asyncResult);
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetClientAccountAsync(string errMsg, object[] ProcedureParameters) {
        this.GetClientAccountAsync(errMsg, ProcedureParameters, null);
    }
    
    /// <remarks/>
    public void GetClientAccountAsync(string errMsg, object[] ProcedureParameters, object userState) {
        if ((this.GetClientAccountOperationCompleted == null)) {
            this.GetClientAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountOperationCompleted);
        }
        this.InvokeAsync("GetClientAccount", new object[] {
                    errMsg,
                    ProcedureParameters}, this.GetClientAccountOperationCompleted, userState);
    }
    
    private void OnGetClientAccountOperationCompleted(object arg) {
        if ((this.GetClientAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetClientAccountCompleted(this, new GetClientAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetUTAccountStatement", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetUTAccountStatement(ref string errMsg, object[] ProcedureParameters) {
        object[] results = this.Invoke("GetUTAccountStatement", new object[] {
                    errMsg,
                    ProcedureParameters});
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUTAccountStatement(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUTAccountStatement", new object[] {
                    errMsg,
                    ProcedureParameters}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetUTAccountStatement(System.IAsyncResult asyncResult, out string errMsg) {
        object[] results = this.EndInvoke(asyncResult);
        errMsg = ((string)(results[1]));
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetUTAccountStatementAsync(string errMsg, object[] ProcedureParameters) {
        this.GetUTAccountStatementAsync(errMsg, ProcedureParameters, null);
    }
    
    /// <remarks/>
    public void GetUTAccountStatementAsync(string errMsg, object[] ProcedureParameters, object userState) {
        if ((this.GetUTAccountStatementOperationCompleted == null)) {
            this.GetUTAccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUTAccountStatementOperationCompleted);
        }
        this.InvokeAsync("GetUTAccountStatement", new object[] {
                    errMsg,
                    ProcedureParameters}, this.GetUTAccountStatementOperationCompleted, userState);
    }
    
    private void OnGetUTAccountStatementOperationCompleted(object arg) {
        if ((this.GetUTAccountStatementCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUTAccountStatementCompleted(this, new GetUTAccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void QueryDefaultCompletedEventHandler(object sender, QueryDefaultCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class QueryDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal QueryDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string errMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetUTAccountsWebCompletedEventHandler(object sender, GetUTAccountsWebCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUTAccountsWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUTAccountsWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string errMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetClientAccountCompletedEventHandler(object sender, GetClientAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetClientAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetClientAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string errMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void GetUTAccountStatementCompletedEventHandler(object sender, GetUTAccountStatementCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUTAccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUTAccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string errMsg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}
