//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BRIMSPortalWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BRInvestmentPortalServiceSoap", Namespace="http://craftsilicon.com/BRIMS")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class BRInvestmentPortalService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryDefaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUTAccountsWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountNAVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUTAccountStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFundTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMainMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyStringOperationCompleted;
        
        /// <remarks/>
        public BRInvestmentPortalService() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["BRIMSPortalWebService.BRInvestmentPortalService"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost:5244/BRInvestmentPortalService.asmx";
            }
        }
        
        /// <remarks/>
        public event QueryDefaultCompletedEventHandler QueryDefaultCompleted;
        
        /// <remarks/>
        public event GetUTAccountsWebCompletedEventHandler GetUTAccountsWebCompleted;
        
        /// <remarks/>
        public event GetCurrencyNameCompletedEventHandler GetCurrencyNameCompleted;
        
        /// <remarks/>
        public event GetClientAccountCompletedEventHandler GetClientAccountCompleted;
        
        /// <remarks/>
        public event GetAccountNAVCompletedEventHandler GetAccountNAVCompleted;
        
        /// <remarks/>
        public event GetUTAccountStatementCompletedEventHandler GetUTAccountStatementCompleted;
        
        /// <remarks/>
        public event GetFundTypeCompletedEventHandler GetFundTypeCompleted;
        
        /// <remarks/>
        public event GetMainMenuCompletedEventHandler GetMainMenuCompleted;
        
        /// <remarks/>
        public event GetMyStringCompletedEventHandler GetMyStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/QueryDefault", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable QueryDefault(ref string errMsg, string StoredProcedure, object[] ProcedureParameters) {
            object[] results = this.Invoke("QueryDefault", new object[] {
                        errMsg,
                        StoredProcedure,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryDefault(string errMsg, string StoredProcedure, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryDefault", new object[] {
                        errMsg,
                        StoredProcedure,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndQueryDefault(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDefaultAsync(string errMsg, string StoredProcedure, object[] ProcedureParameters) {
            this.QueryDefaultAsync(errMsg, StoredProcedure, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void QueryDefaultAsync(string errMsg, string StoredProcedure, object[] ProcedureParameters, object userState) {
            if ((this.QueryDefaultOperationCompleted == null)) {
                this.QueryDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDefaultOperationCompleted);
            }
            this.InvokeAsync("QueryDefault", new object[] {
                        errMsg,
                        StoredProcedure,
                        ProcedureParameters}, this.QueryDefaultOperationCompleted, userState);
        }
        
        private void OnQueryDefaultOperationCompleted(object arg) {
            if ((this.QueryDefaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDefaultCompleted(this, new QueryDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetUTAccountsWeb", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUTAccountsWeb(ref string errMsg) {
            object[] results = this.Invoke("GetUTAccountsWeb", new object[] {
                        errMsg});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUTAccountsWeb(string errMsg, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUTAccountsWeb", new object[] {
                        errMsg}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetUTAccountsWeb(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUTAccountsWebAsync(string errMsg) {
            this.GetUTAccountsWebAsync(errMsg, null);
        }
        
        /// <remarks/>
        public void GetUTAccountsWebAsync(string errMsg, object userState) {
            if ((this.GetUTAccountsWebOperationCompleted == null)) {
                this.GetUTAccountsWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUTAccountsWebOperationCompleted);
            }
            this.InvokeAsync("GetUTAccountsWeb", new object[] {
                        errMsg}, this.GetUTAccountsWebOperationCompleted, userState);
        }
        
        private void OnGetUTAccountsWebOperationCompleted(object arg) {
            if ((this.GetUTAccountsWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUTAccountsWebCompleted(this, new GetUTAccountsWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetCurrencyName", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyName(string CurrencyID) {
            object[] results = this.Invoke("GetCurrencyName", new object[] {
                        CurrencyID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrencyName(string CurrencyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrencyName", new object[] {
                        CurrencyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetCurrencyName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyNameAsync(string CurrencyID) {
            this.GetCurrencyNameAsync(CurrencyID, null);
        }
        
        /// <remarks/>
        public void GetCurrencyNameAsync(string CurrencyID, object userState) {
            if ((this.GetCurrencyNameOperationCompleted == null)) {
                this.GetCurrencyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyNameOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyName", new object[] {
                        CurrencyID}, this.GetCurrencyNameOperationCompleted, userState);
        }
        
        private void OnGetCurrencyNameOperationCompleted(object arg) {
            if ((this.GetCurrencyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyNameCompleted(this, new GetCurrencyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetClientAccount", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetClientAccount(ref string errMsg, object[] ProcedureParameters) {
            object[] results = this.Invoke("GetClientAccount", new object[] {
                        errMsg,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClientAccount(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClientAccount", new object[] {
                        errMsg,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetClientAccount(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAccountAsync(string errMsg, object[] ProcedureParameters) {
            this.GetClientAccountAsync(errMsg, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void GetClientAccountAsync(string errMsg, object[] ProcedureParameters, object userState) {
            if ((this.GetClientAccountOperationCompleted == null)) {
                this.GetClientAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAccountOperationCompleted);
            }
            this.InvokeAsync("GetClientAccount", new object[] {
                        errMsg,
                        ProcedureParameters}, this.GetClientAccountOperationCompleted, userState);
        }
        
        private void OnGetClientAccountOperationCompleted(object arg) {
            if ((this.GetClientAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAccountCompleted(this, new GetClientAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetAccountNAV", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAccountNAV(ref string errMsg, object[] ProcedureParameters) {
            object[] results = this.Invoke("GetAccountNAV", new object[] {
                        errMsg,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountNAV(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountNAV", new object[] {
                        errMsg,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetAccountNAV(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountNAVAsync(string errMsg, object[] ProcedureParameters) {
            this.GetAccountNAVAsync(errMsg, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void GetAccountNAVAsync(string errMsg, object[] ProcedureParameters, object userState) {
            if ((this.GetAccountNAVOperationCompleted == null)) {
                this.GetAccountNAVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountNAVOperationCompleted);
            }
            this.InvokeAsync("GetAccountNAV", new object[] {
                        errMsg,
                        ProcedureParameters}, this.GetAccountNAVOperationCompleted, userState);
        }
        
        private void OnGetAccountNAVOperationCompleted(object arg) {
            if ((this.GetAccountNAVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountNAVCompleted(this, new GetAccountNAVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetUTAccountStatement", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUTAccountStatement(ref string errMsg, object[] ProcedureParameters) {
            object[] results = this.Invoke("GetUTAccountStatement", new object[] {
                        errMsg,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUTAccountStatement(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUTAccountStatement", new object[] {
                        errMsg,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetUTAccountStatement(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUTAccountStatementAsync(string errMsg, object[] ProcedureParameters) {
            this.GetUTAccountStatementAsync(errMsg, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void GetUTAccountStatementAsync(string errMsg, object[] ProcedureParameters, object userState) {
            if ((this.GetUTAccountStatementOperationCompleted == null)) {
                this.GetUTAccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUTAccountStatementOperationCompleted);
            }
            this.InvokeAsync("GetUTAccountStatement", new object[] {
                        errMsg,
                        ProcedureParameters}, this.GetUTAccountStatementOperationCompleted, userState);
        }
        
        private void OnGetUTAccountStatementOperationCompleted(object arg) {
            if ((this.GetUTAccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUTAccountStatementCompleted(this, new GetUTAccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetFundType", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFundType(ref string errMsg, object[] ProcedureParameters) {
            object[] results = this.Invoke("GetFundType", new object[] {
                        errMsg,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFundType(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFundType", new object[] {
                        errMsg,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetFundType(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFundTypeAsync(string errMsg, object[] ProcedureParameters) {
            this.GetFundTypeAsync(errMsg, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void GetFundTypeAsync(string errMsg, object[] ProcedureParameters, object userState) {
            if ((this.GetFundTypeOperationCompleted == null)) {
                this.GetFundTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFundTypeOperationCompleted);
            }
            this.InvokeAsync("GetFundType", new object[] {
                        errMsg,
                        ProcedureParameters}, this.GetFundTypeOperationCompleted, userState);
        }
        
        private void OnGetFundTypeOperationCompleted(object arg) {
            if ((this.GetFundTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFundTypeCompleted(this, new GetFundTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetMainMenu", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMainMenu(ref string errMsg, object[] ProcedureParameters) {
            object[] results = this.Invoke("GetMainMenu", new object[] {
                        errMsg,
                        ProcedureParameters});
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMainMenu(string errMsg, object[] ProcedureParameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMainMenu", new object[] {
                        errMsg,
                        ProcedureParameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetMainMenu(System.IAsyncResult asyncResult, out string errMsg) {
            object[] results = this.EndInvoke(asyncResult);
            errMsg = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMainMenuAsync(string errMsg, object[] ProcedureParameters) {
            this.GetMainMenuAsync(errMsg, ProcedureParameters, null);
        }
        
        /// <remarks/>
        public void GetMainMenuAsync(string errMsg, object[] ProcedureParameters, object userState) {
            if ((this.GetMainMenuOperationCompleted == null)) {
                this.GetMainMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMainMenuOperationCompleted);
            }
            this.InvokeAsync("GetMainMenu", new object[] {
                        errMsg,
                        ProcedureParameters}, this.GetMainMenuOperationCompleted, userState);
        }
        
        private void OnGetMainMenuOperationCompleted(object arg) {
            if ((this.GetMainMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMainMenuCompleted(this, new GetMainMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://craftsilicon.com/BRIMS/GetMyString", RequestNamespace="http://craftsilicon.com/BRIMS", ResponseNamespace="http://craftsilicon.com/BRIMS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyString() {
            object[] results = this.Invoke("GetMyString", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMyString(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyString", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetMyString(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyStringAsync() {
            this.GetMyStringAsync(null);
        }
        
        /// <remarks/>
        public void GetMyStringAsync(object userState) {
            if ((this.GetMyStringOperationCompleted == null)) {
                this.GetMyStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyStringOperationCompleted);
            }
            this.InvokeAsync("GetMyString", new object[0], this.GetMyStringOperationCompleted, userState);
        }
        
        private void OnGetMyStringOperationCompleted(object arg) {
            if ((this.GetMyStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyStringCompleted(this, new GetMyStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void QueryDefaultCompletedEventHandler(object sender, QueryDefaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUTAccountsWebCompletedEventHandler(object sender, GetUTAccountsWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUTAccountsWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUTAccountsWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCurrencyNameCompletedEventHandler(object sender, GetCurrencyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetClientAccountCompletedEventHandler(object sender, GetClientAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAccountNAVCompletedEventHandler(object sender, GetAccountNAVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountNAVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountNAVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUTAccountStatementCompletedEventHandler(object sender, GetUTAccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUTAccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUTAccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFundTypeCompletedEventHandler(object sender, GetFundTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFundTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFundTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMainMenuCompletedEventHandler(object sender, GetMainMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMainMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMainMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetMyStringCompletedEventHandler(object sender, GetMyStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
